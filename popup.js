document.addEventListener('DOMContentLoaded', () => {
  const qrcodeContainer = document.getElementById('qrcode');
  const textInput = document.getElementById('text-input');
  const downloadBtn = document.getElementById('download-btn');

  // Create a QRCode instance
  const qrcode = new QRCode(qrcodeContainer, {
    width: 200,
    height: 200,
  });

  // Function to generate QR code
  function generateQRCode(text) {
    if (text) {
      qrcode.clear(); // Clear the previous QR code
      qrcode.makeCode(text); // Generate a new one
    }
  }

  // --- Core Feature 1: Show QR code for the current tab's URL ---
  // Query for the active tab
  chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {
    const currentUrl = tabs[0].url;
    textInput.value = currentUrl; // Set the URL in the input box
    generateQRCode(currentUrl); // Generate the initial QR code
  });

  // --- Core Feature 2: Update QR code in real-time as user types ---
  textInput.addEventListener('input', () => {
    generateQRCode(textInput.value);
  });

  // --- Core Feature 3: Download the QR code as a PNG image ---
  downloadBtn.addEventListener('click', () => {
    // Find the canvas element generated by the library
    const canvas = qrcodeContainer.querySelector('canvas');
    if (canvas) {
      const link = document.createElement('a');
      link.href = canvas.toDataURL('image/png');
      link.download = 'qrcode.png';
      link.click();
    }
  });
});